{"version":3,"sources":["services/firebase.js","helpers/auth.js","views/chat.js","views/signup.js","views/login.js","views/home.js","component/messages.js","views/inbox.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","database","dbf","firestore","storage","ref","signup","email","password","createUserWithEmailAndPassword","then","cred","push","console","log","catch","e","message","logout","signOut","Chat","props","switchChat","setState","receiver","theRef","current","value","fileChangedHandler","event","selectedFile","target","files","state","user","currentUser","chats","sentChat","users","content","readError","writeError","handleChange","bind","handleSubmit","React","createRef","this","collection","where","onSnapshot","querySnapshot","forEach","doc","id","data","error","prevProps","prevState","preventDefault","file","add","sender","timestamp","Date","now","uid","err","name","metadata","contentType","type","child","put","snapshot","getDownloadURL","url","image","d","getDate","getMonth","getFullYear","getHours","getMinutes","className","onClick","map","chat","key","src","formatTime","onSubmit","onChange","Component","SignUp","to","placeholder","SignIn","signInWithEmailAndPassword","Home","Messages","get","messi","Inbox","handleMessage","sendMessage","change","on","snap","val","alert","PrivateRoute","component","authenticated","rest","render","pathname","from","location","PublicRoute","App","loading","onAuthStateChanged","role","exact","path","Signup","Login","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a02b4a67.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBy6fFMIToaiUSGEuaXfxMZga3kJWc4_3U\",\r\n  authDomain: \"chat-app-1e5ec.firebaseapp.com\",\r\n  databaseURL: \"https://chat-app-1e5ec.firebaseio.com\",\r\n  projectId: \"chat-app-1e5ec\",\r\n  storageBucket: \"chat-app-1e5ec.appspot.com\",\r\n  messagingSenderId: \"101111176758\",\r\n  appId: \"1:101111176758:web:02103bb6bf85065a09c297\",\r\n  measurementId: \"G-W70764WW8B\"\r\n  };\r\n  firebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth;\r\nexport const db = firebase.database();\r\nexport const dbf =firebase.firestore();\r\nexport const storage = firebase.storage().ref();","import { auth } from \"../services/firebase\";\r\nimport {db} from '../services/firebase'\r\nexport function signup(email, password) {\r\n  return auth().createUserWithEmailAndPassword(email, password).then( cred => {\r\n    return db.ref('users').push ({\r\n      email: email\r\n    })\r\n  }).then(() => {\r\n    console.log(\"posted\")\r\n  }).catch(e => \r\n   console.log(e.message)\r\n  );;\r\n}\r\n\r\nexport function signin(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { auth } from \"../services/firebase\";\r\nimport { db, storage, dbf } from \"../services/firebase\"\r\nimport '../styles/chat.css'\r\nimport {logout} from '../helpers/auth'\r\nimport { Link } from \"react-router-dom\";\r\n// import ContactList from '../component/contactList'\r\n\r\nclass Chat extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          user: auth().currentUser,\r\n          chats: [],\r\n          sentChat: [],\r\n          users: [],\r\n          content: '',\r\n          receiver: 'anu@gmail.com',\r\n          readError: null,\r\n          writeError: null,\r\n          selectedFile: null\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.theRef = React.createRef();\r\n      }\r\n      // async componentDidMount() {\r\n      //   this.setState({ readError: null });\r\n      //   try {\r\n      //     db.ref('chats').orderByChild(\"email\").equalTo(this.state.receiver).on(\"value\", snapshot => {\r\n      //       let chats = [];\r\n      //       snapshot.forEach((snap) => {\r\n      //         chats.push(snap.val());\r\n      //       });\r\n      //       this.setState({ chats });\r\n      //     });\r\n      //   } catch (error) {\r\n      //     this.setState({ readError: error.message });\r\n      //     console.log(error.message)\r\n      //   }\r\n      // }\r\n\r\n      async componentDidMount() {\r\n        this.setState({ readError: null });\r\n        \r\n        try {\r\n          dbf.collection(\"inbox\").where(\"receiver\", \"==\", this.state.user.email).where(\"sender\", \"==\", this.state.receiver)\r\n          .onSnapshot(querySnapshot=> {\r\n              const chats = []\r\n              querySnapshot.forEach(doc => {\r\n                  // doc.data() is never undefined for query doc snapshots\r\n                  console.log(doc.id, \" => \", doc.data());\r\n                  chats.push(doc.data())\r\n\r\n                  this.setState({ chats })\r\n              });})\r\n      } catch (error) {\r\n        this.setState({ readError: error.message });\r\n      }\r\n\r\n     \r\n        try {\r\n          dbf.collection(\"inbox\").where(\"sender\", \"==\", this.state.user.email).where(\"receiver\", \"==\", this.state.receiver)\r\n      .onSnapshot(querySnapshot=> {\r\n          let sentChat = []\r\n          querySnapshot.forEach(doc => {\r\n              // doc.data() is never undefined for query doc snapshots\r\n              console.log(doc.id, \" => \", doc.data());\r\n              sentChat.push(doc.data())\r\n              this.setState({ sentChat })\r\n          });}) \r\n\r\n        } catch (error) {\r\n          this.setState({ readError: error.message });\r\n        }\r\n      }\r\n\r\n      \r\n\r\n     async componentDidUpdate (prevProps, prevState) {\r\n        if(prevState.receiver !== this.state.receiver) {\r\n          this.setState({ chats : [] });\r\n       \r\n          try {\r\n            dbf.collection(\"inbox\").where(\"receiver\", \"==\", this.state.user.email).where(\"sender\", \"==\", this.state.receiver)\r\n            .onSnapshot(querySnapshot=> {\r\n                const chats = []\r\n                querySnapshot.forEach(doc => {\r\n                    // doc.data() is never undefined for query doc snapshots\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                    chats.push(doc.data())\r\n                    this.setState({ chats })\r\n                });})\r\n        } catch (error) {\r\n          this.setState({ readError: error.message });\r\n        }\r\n\r\n        this.setState({ sentChat: [] });\r\n          try {\r\n            dbf.collection(\"inbox\").where(\"sender\", \"==\", this.state.user.email).where(\"receiver\", \"==\", this.state.receiver)\r\n        .onSnapshot(querySnapshot=> {\r\n            let sentChat = []\r\n            querySnapshot.forEach(doc => {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                console.log(doc.id, \" => \", doc.data());\r\n                sentChat.push(doc.data())\r\n                this.setState({ sentChat })\r\n            });}) \r\n\r\n          } catch (error) {\r\n            this.setState({ readError: error.message });\r\n          }\r\n        }\r\n      }\r\n      handleChange(event) {\r\n        this.setState({\r\n          content: event.target.value\r\n        });\r\n      }\r\n      switchChat = e =>{\r\n        this.setState({\r\n          receiver: this.theRef.current.value\r\n        });\r\n      }\r\n      fileChangedHandler = event => {\r\n        this.setState({ selectedFile: event.target.files[0] })\r\n      }\r\n\r\n      \r\n      logout (e) {\r\n        logout(e)\r\n      }\r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        const file = this.state.selectedFile;\r\n        this.setState({ writeError: null });\r\n        if( file === null ) {\r\n          dbf.collection(\"inbox\").add({\r\n                   message: this.state.content,\r\n                   sender: this.state.user.email,\r\n                   receiver: this.state.receiver,\r\n                   timestamp: Date.now(),\r\n                   uid: this.state.user.uid\r\n                 }).then(() => {\r\n                  this.setState({ content: '' });\r\n                 }).catch(err => {\r\n                  this.setState({ writeError: err.message });\r\n                 }); \r\n        } else {\r\n          const name = +new Date() + \"-\" + file.name;\r\n        //\r\n        const metadata = {\r\n          contentType: file.type\r\n        };\r\n        const task = storage.child(name).put(file, metadata);\r\n        task\r\n          .then(snapshot => snapshot.ref.getDownloadURL())\r\n          .then(url => {\r\n            console.log(url);\r\n         //  const url = url;\r\n           dbf.collection(\"inbox\").add({\r\n              message: this.state.content,\r\n              sender: this.state.user.email,\r\n              receiver: this.state.receiver,\r\n              timestamp: Date.now(),\r\n              uid: this.state.user.uid,\r\n              image: url\r\n        })\r\n      })\r\n           //save picture of image\r\n        .then(() => {\r\n          this.setState({ content: '' });\r\n          this.setState({ selectedFile: null });\r\n         }).catch(err => {\r\n          this.setState({ writeError: err.message });\r\n         });          \r\n        } \r\n       }\r\n    \r\n      \r\n    formatTime(timestamp) {\r\n      const d = new Date(timestamp);\r\n      const time = `${d.getDate()}/${(d.getMonth()+1)}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\r\n      return time;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"chat__container\">\r\n              <div className=\"contact__list\">\r\n                <h3>Contacts</h3>\r\n                {/* <div>          \r\n                  {this.state.users.map(user => <div className=\"contact__mail\"><h4 onClick={this.selectContact} id={user.email} key={user.email} value={user.email}>{user.email}</h4></div>)}        \r\n              </div> */}\r\n                {/* <select name=\"fruit\" multiple onChange={this.switchChat} value={this.state.value}>\r\n                {this.state.users.map(user => <option key={user.email} value={user.email}>{user.email}</option>)}\r\n                </select> */}\r\n                <input className=\"chat__input\" ref={this.theRef} />\r\n                <button className=\"chat__button\" onClick={this.switchChat}>Chat</button>\r\n                <div className=\"name\"><h3>{this.state.receiver}</h3></div>\r\n              </div>\r\n              <div className=\"messages\">\r\n             \r\n              <div className=\"chats\">\r\n                {this.state.chats.map(chat => {\r\n                  return ( \r\n                  <div className=\"indi__message\" key={chat.timestamp}>\r\n                    <div className='image__container'>{chat.image ? <img src={chat.image}/> : null}</div>\r\n                    <p>\r\n                      {chat.message}<h5><i>{chat.sender}</i> {this.formatTime(chat.timestamp)}</h5>\r\n                    </p>       \r\n                   </div> )\r\n                })\r\n                }\r\n                {\r\n                  this.state.sentChat.map(chat => {\r\n                    return ( \r\n                    <div className=\"indi__message__sent\" key={chat.timestamp}>\r\n                      <div className='image__container'>{chat.image ? <img src={chat.image}/> : null}</div>\r\n                      <p>\r\n                        {chat.message}<h5><i>{chat.sender}</i> {this.formatTime(chat.timestamp)}</h5>\r\n                      </p>       \r\n                     </div> )\r\n                  })\r\n                }\r\n              </div>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"bottom__item\">\r\n                  <div><input \r\n                      onChange={this.handleChange} \r\n                      value={this.state.content}>\r\n                  </input>\r\n                  {this.state.error ? \r\n                      <p>{this.state.writeError}</p> \r\n                      : null}\r\n                  </div>\r\n                  <div><input type=\"file\" onChange={this.fileChangedHandler}></input></div>\r\n                  <button className=\"btn__send\" type=\"submit\">Send</button>\r\n                </div>\r\n              </form>\r\n              <div>\r\n                Signed in as: <strong>{this.state.user.email}</strong><br/>\r\n                {/* <Link to=\"/inbox\">\r\n                  Check your inbox\r\n                </Link> */}\r\n                <button onClick={logout}>LogOut</button>\r\n              </div>\r\n              </div>\r\n              </div>\r\n          \r\n          );\r\n    }\r\n}\r\n\r\nexport default Chat\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signup } from \"../helpers/auth\";\r\n//import '../styles/chat.css'\r\n\r\n class SignUp extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      email: '',\r\n      password: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({ error: '' });\r\n    try {\r\n      await signup(this.state.email, this.state.password);\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        {/* <form onSubmit={this.handleSubmit}>\r\n          <h1>\r\n            Sign Up to\r\n          <Link className=\"title ml-2\" to=\"/\">Chat App</Link>\r\n          </h1>\r\n          <p className=\"lead\">Fill in the form below to create an account.</p>\r\n          <div className=\"form-group\">\r\n            <input className=\"form-control\" placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\r\n            <button className=\"btn btn-primary px-5\" type=\"submit\">Sign up</button>\r\n          </div>\r\n          <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n        </form> */}\r\n\r\n\r\n        <section>\r\n          <span></span>\r\n            {/* <form>\r\n              <input placeholder='User Name' type='text'/>\r\n              <input placeholder='Password' type='password'/>\r\n            </form> */}\r\n             <form onSubmit={this.handleSubmit}>\r\n          <h1>\r\n            Sign Up to\r\n          <Link className=\"title ml-2\" to=\"/\"> Chat App</Link>\r\n          </h1>\r\n          <p className=\"lead\">Fill in the form below to create an account.</p>\r\n          <div className=\"form-group\">\r\n            <input className=\"form-control\" placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\r\n            <button className=\"btn btn-primary px-5\" type=\"submit\">Sign up</button>\r\n          </div>\r\n          <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n        </form>\r\n            \r\n            {/* <h2>\r\n              <a href='#'>Forgot Password?</a>\r\n            </h2> */}\r\n          </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signin } from \"../helpers/auth\";\r\nimport '../styles/login.css'\r\n\r\nclass SignIn extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      email: '',\r\n      password: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({ error: '' });\r\n    try {\r\n      await signin(this.state.email, this.state.password);\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section>\r\n          <span></span>\r\n            \r\n            <form className=\"mt-5 py-5 px-5\" onSubmit={this.handleSubmit}>\r\n          <h1>\r\n            Sign In to\r\n          <Link className=\"title ml-2\" to=\"/\"> Chat App</Link>\r\n          </h1>\r\n          <p className=\"lead\">Good To Have You Back</p>\r\n          <div className=\"form-group\">\r\n            <input className=\"form-control\" placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\r\n            <button className=\"btn btn-primary px-5\" type=\"submit\">Log In</button>\r\n          </div>\r\n          <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n        </form>\r\n          </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignIn;","import React from 'react'\r\nimport '../styles/home.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home__container\">\r\n          <section>\r\n          <span></span>\r\n            <h1>Welcome To Chatty</h1>\r\n            {/* <form>\r\n              <input placeholder='User Name' type='text'/>\r\n              <input placeholder='Password' type='password'/>\r\n            </form> */}\r\n            <Link to='/login'>\r\n              <button>LOGIN</button>\r\n            </Link>\r\n            <Link to='/signup'>\r\n              <button>SIGNUP</button>\r\n            </Link>\r\n            \r\n            {/* <h2>\r\n              <a href='#'>Forgot Password?</a>\r\n            </h2> */}\r\n          </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport {dbf, auth} from '../services/firebase'\r\nexport class Messages extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             user : auth().currentUser,\r\n             message : [],\r\n             readError: ''\r\n        }\r\n    }\r\n\r\n        async componentDidMount() {\r\n            \r\n            try {\r\n                dbf.collection(\"inbox\").where(\"receiver\", \"==\", this.state.user.email)\r\n                .get()\r\n                .then(querySnapshot=> {\r\n                    const message = []\r\n                    querySnapshot.forEach(doc => {\r\n                        // doc.data() is never undefined for query doc snapshots\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        message.push(doc.data())\r\n                        this.setState({ message })\r\n                    });})\r\n\r\n                    \r\n            } catch (error) {\r\n              this.setState({ readError: error.message });\r\n            }\r\n          }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                {this.state.message.map(messi => {\r\n                  return ( \r\n                  <div  key={messi.message}>\r\n                    <h3>Sender: {messi.sender}</h3>\r\n                    <p>\r\n                    <h4>Message: {messi.message}</h4>\r\n                    </p>       \r\n                   </div> )\r\n                })} \r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages\r\n","import React, { Component } from 'react'\r\nimport '../styles/inbox.css'\r\nimport { auth } from \"../services/firebase\";\r\nimport { db, dbf } from \"../services/firebase\"\r\nimport Message from '../component/messages'\r\nimport {Link} from 'react-router-dom'\r\nexport class Inbox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n          user: auth().currentUser,\r\n            users : [],\r\n            value : '',\r\n            message : ''  \r\n        }\r\n        this.handleMessage = this.handleMessage.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.change = this.change.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n          db.ref(\"users\").on(\"value\", snapshot => {\r\n            let users = [];\r\n            snapshot.forEach((snap) => {\r\n              users.push(snap.val());\r\n            });\r\n            this.setState({ users });\r\n          });\r\n        } catch (error) {\r\n          console.log(error.message)\r\n        }\r\n    }\r\n\r\n    handleMessage (e) {\r\n      this.setState({\r\n        message: e.target.value\r\n      });\r\n    }\r\n\r\n    sendMessage (e) {\r\n      dbf.collection(\"inbox\").add({\r\n        message: this.state.message,\r\n        sender: this.state.user.email,\r\n        receiver: this.state.value\r\n      }).then(() => {\r\n       this.setState({ message: '' });\r\n       alert(\"Mesage sent\")\r\n      }).catch(err => {\r\n       console.log(err.message)\r\n      }); \r\n    }\r\n\r\n\r\n    change(event){\r\n        this.setState({\r\n          value: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"inbox__container\">\r\n                <h1>Here's your inbox</h1>\r\n                <Message/>\r\n                <h1>Compose a message</h1>\r\n                <select id=\"lang\" onChange={this.change} value={this.state.value}>\r\n                  <option value=\"select\">Select</option>\r\n                  {this.state.users.map(user => <option key={user.email} value={user.email}>{user.email}</option>)}\r\n               </select>\r\n               <textarea \r\n                className =\"ma\"\r\n                type=\"text\" \r\n                name=\"\"\r\n                onChange={this.handleMessage} \r\n                value={this.state.message}\r\n               />\r\n               <button \r\n               onClick={this.sendMessage}\r\n               className =\"ma\"\r\n               >\r\n                 Send\r\n               </button>\r\n               <Link to=\"/chat\">Back to group chat</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inbox\r\n\r\n\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Chat from './views/chat';\nimport Signup from './views/signup';\nimport Login from './views/login';\nimport Home from './views/home'\nimport { auth } from './services/firebase';\nimport Inbox from './views/inbox'\n\n\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n            <Redirect to=\"/chat\" />\n          )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            />\n             <PrivateRoute\n              path=\"/inbox\"\n              authenticated={this.state.authenticated}\n              component={Inbox}\n            />\n            <PublicRoute\n              path=\"/signup\"\n              authenticated={this.state.authenticated}\n              component={Signup}\n            />\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            />\n          </Switch>\n        </Router>\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}